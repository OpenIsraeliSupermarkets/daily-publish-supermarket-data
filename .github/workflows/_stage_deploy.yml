name: Staging | Deploy to Runner Machine 

on:
  workflow_dispatch:
  push:
    branches: [stage]

jobs:
  deploy:
    runs-on: 
      - self-hosted
      - staging

    steps:
      - uses: actions/checkout@v3
      
      - uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Adding env variables    
        run: |
          echo "ENABLED_SCRAPERS=${{ secrets.ENABLED_SCRAPERS }}" >> $GITHUB_ENV
          echo "ENABLED_FILE_TYPES=${{ secrets.ENABLED_FILE_TYPES }}" >> $GITHUB_ENV
          echo "LIMIT=${{ secrets.LIMIT }}" >> $GITHUB_ENV
          echo "APP_DATA_PATH=${{ runner.workspace }}/app_data" >> $GITHUB_ENV
          echo "MONGO_DATA_PATH=${{ runner.workspace }}/mongo_data" >> $GITHUB_ENV
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> $GITHUB_ENV
          echo "MONGO_PORT=${{ secrets.MONGO_PORT }}" >> $GITHUB_ENV
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> $GITHUB_ENV
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> $GITHUB_ENV
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> $GITHUB_ENV
          echo "KAGGLE_USERNAME=${{ secrets.KAGGLE_USERNAME }}" >> $GITHUB_ENV
          echo "KAGGLE_KEY=${{ secrets.KAGGLE_KEY }}" >> $GITHUB_ENV
          echo "MONGO_USERNAME=${{ secrets.MONGO_USERNAME }}" >> $GITHUB_ENV
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> $GITHUB_ENV
          echo "KAGGLE_DATASET_REMOTE_NAME=test-super-dataset-2" >> $GITHUB_ENV
          echo "LOG_LEVEL=DEBUG" >> $GITHUB_ENV
          echo "STOP=EOD" >> $GITHUB_ENV
          echo "REPEAT=NEVER" >> $GITHUB_ENV
          echo "WAIT_TIME_SECONDS=60" >> $GITHUB_ENV


      - name: Stoping Old Container
        run: docker compose down --remove-orphans

      - name: Make sure folders exists
        run: |-
          mkdir -p "${{ env.APP_DATA_PATH }}" &&
          mkdir -p "${{ env.MONGO_DATA_PATH }}"

      - name: Build and tag Docker image
        run:  docker compose build
        
      - name: Start Docker daemon (if not already running)
        run: systemctl start docker || true # Start if not already running
      
      - name: Make sure mongodb is running
        run: docker compose up -d

      # act -W '.github/workflows/_stage_deploy.yml' -P self-hosted=catthehacker/ubuntu:act-latest --secret-file .env.stage